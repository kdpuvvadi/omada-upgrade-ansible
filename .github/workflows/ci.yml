---
name: ci

'on': [push, pull_request, workflow_dispatch]

jobs:
  install:
    runs-on: ubuntu-latest
    name: install
    steps:
      - name: checkout codebase
        uses: actions/checkout@master

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: install jq
        run: sudo apt-get install -y jq

      - name: display DigitalOcean team name
        run: |
          doctl account get --output json | jq '{ team:.team.name, status:.status }'
      - name: generate userdata file
        env:
          SSH_PUB: ${{ secrets.SSH_PUB }}
        run: |
          cp init.yml.j2 init.yml
          sed -i -e "s|pubkey|$SSH_PUB|g" init.yml

      - name: deploy droplet
        env:
          size: ${{ secrets.SIZE }}
          region: ${{ secrets.REGION }}
          fingerprint: ${{ secrets.SSH_FINGERPRINT }}
          name: ${{ secrets.DROPLET_NAME }}
          image: ${{ secrets.IMAGE_UBUNTU2004 }}
        run: |
          doctl compute droplet create $name --image $image --region $region --size $size --ssh-keys $fingerprint --user-data-file ./init.yml --wait -v
      - name: droplet data
        run: |
          doctl compute droplet list --output json | jq '.[0].id, .[0].name, .[0].region.name, .[0].image.description, .[0].size.description'
      - name: setup python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: install dependencies
        run: pip3 install ansible ansible-lint yamllint

      - name: Checkout omada ansible repo
        uses: actions/checkout@master
        with:
          repository: kdpuvvadi/Omada-Ansible
          ref: 5.3.1
          path: omada-install

      - name: Ansible Lint
        run: |
          cd omada-install
          ansible-lint .

      - name: YAML lint
        run: |
          cd omada-install
          yamllint .

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa
          known_hosts: unnecessary
          if_key_exists: fail

      - name: setup ansible
        run: |
          cd ./omada-install
          cp inventory.ini.j2 inventory.ini
          cp vars.yml.j2 vars.yml
          hostip=$(doctl compute droplet list --format 'Public IPv4' --no-header)
          sed -i -e "s|host_ip|$hostip|g" inventory.ini
          cat inventory.ini

      - name: wait
        run: sleep 30

      - name: ping host
        run: |
          cd omada-install
          eval `ssh-agent -s`
          ssh-add ~/.ssh/id_rsa
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible all -m ping

      - name: run playlist
        run: |
          cd omada-install
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible-playbook main.yml

  upgrade:
    runs-on: ubuntu-latest
    name: upgrade
    needs: install
    steps:
      - name: checkout codebase
        uses: actions/checkout@master

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: install jq
        run: sudo apt-get install -y jq

      - name: install dependencies
        run: pip3 install ansible ansible-lint yamllint

      - name: Ansible Lint
        run: |
          ansible-lint .

      - name: YAML lint
        run: |
          yamllint .

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa
          known_hosts: unnecessary
          if_key_exists: fail

      - name: setup ansible
        run: |
          cp inventory.ini.j2 inventory.ini
          cp vars.yml.j2 vars.yml
          hostip=$(doctl compute droplet list --format 'Public IPv4' --no-header)
          sed -i -e "s/host_ip/$hostip/g" inventory.ini

      - name: ping host
        run: |
          eval `ssh-agent -s`
          ssh-add ~/.ssh/id_rsa
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible all -m ping

      - name: run playlist
        run: |
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible-playbook main.yml

      - name: delete droplet
        run: |
          dropletid=$(doctl compute droplet list  --output json | jq '.[0].id')
          doctl compute droplet delete $dropletid --force
